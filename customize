#!/usr/bin/bash

PATH=/opt/local/gnu/bin:/opt/local/bin:/opt/local/sbin:/usr/bin:/usr/sbin

# Exit if any commands fail
set -o errexit

MATOMO_VERSION="4.5.0"
DESTDIR="/var/www/htdocs/piwik"

MUNIN_PLUGINS="
	apache_accesses
	apache_processes
	apache_volume
	httpd_memory
"

echo "* Remove unused httpd config files"
HTTPD_CONF_RM="httpd-autoindex.conf
httpd-dav.conf
httpd-default.conf
httpd-info.conf
httpd-languages.conf
httpd-manual.conf
httpd-mpm.conf
httpd-multilang-errordoc.conf
httpd-ssl.conf
httpd-userdir.conf
httpd-vhosts.conf"

for CONF_RM in ${HTTPD_CONF_RM}; do
  rm -f /opt/local/etc/httpd/${CONF_RM}
done

echo "* Setup matomo"
mkdir -p $DESTDIR/releases

cd $DESTDIR/releases
curl -L -O https://download.qutic.com/src/piwik/matomo-$MATOMO_VERSION.tar.bz2
gtar xf matomo-$MATOMO_VERSION.tar.bz2
rm matomo-$MATOMO_VERSION.tar.bz2
if [[ -d matomo ]]; then
  mv matomo matomo-$MATOMO_VERSION
fi

cd $DESTDIR
ln -nfs $DESTDIR/releases/matomo-$MATOMO_VERSION current

# touch $DESTDIR/releases/matomo-$MATOMO_VERSION/config/config.ini.php
# chmod 0640 $DESTDIR/releases/matomo-$MATOMO_VERSION/config/config.ini.php

rm "${DESTDIR}/current/robots.txt" || true
cat >> "${DESTDIR}/current/robots.txt" << EOF
User-agent: *
Disallow: /
EOF

mkdir -p "${DESTDIR}/current/tmp/cache/tracker"
chown -R root:www "${DESTDIR}"
chown -R www:www "${DESTDIR}/current/tmp"
chmod -R 0777 "${DESTDIR}/current/tmp"
chmod 0777 "${DESTDIR}/current/tmp/cache/tracker"
chown www:www "${DESTDIR}/current/"*.js

# let plugins extend piwik.js
chmod +w "${DESTDIR}/current/piwik.js"
chown www:www "${DESTDIR}/current/piwik.js"

touch "${DESTDIR}/piwik-update.log"
chown www:www  "${DESTDIR}/piwik-update.log"

echo "* Get GeoLite2-City db"
cd "${DESTDIR}/current/misc"
# download it from:
# https://download.db-ip.com/free/dbip-city-lite-2021-11.mmdb.gz
curl -LO https://download.qutic.com/src/piwik/dbip-city-lite-2021-11.mmdb.gz
gunzip dbip-city-lite-2021-11.mmdb.gz

echo "* Change www for cronjobs"
usermod -d "$DESTDIR" -s /usr/bin/bash www

echo "* Activate munin plugins"
/opt/qutic/bin/munin-node-plugins ${MUNIN_PLUGINS}

echo "* Build php maxminddb extension"
mkdir -p /opt/local/src
cd /opt/local/src
# curl -LO https://github.com/maxmind/MaxMind-DB-Reader-php/archive/v1.3.0.tar.gz
curl -LO https://github.com/maxmind/MaxMind-DB-Reader-php/archive/refs/tags/v1.11.0.tar.gz
gtar xf v1.11.0.tar.gz
cd MaxMind-DB-Reader-php-1.11.0/ext
export LD_LIBRAY_PATH=/opt/local/lib
export LDFLAGS="-L/opt/local/lib -R/opt/local/lib"
/usr/bin/crle -u -l /opt/local/lib
phpize
./configure --prefix=/opt/local
gmake
gmake install

echo "* Setup proxysql";
pkg_add https://download.qutic.com/extras/proxysql-1.4.7.tgz || true
mkdir -p /opt/local/var/proxysql
groupadd -g 130 proxysql
useradd -m -s /usr/bin/false -d /opt/local/var/proxysql -u 130 -g proxysql proxysql
chown proxysql:proxysql /opt/local/var/proxysql/
mv /opt/local/etc/proxysql.cnf /opt/local/etc/proxysql.cnf.bak || true
mv /opt/local/var/tmp/proxysql.cnf /opt/local/etc/proxysql.cnf
chmod 0640 /opt/local/etc/proxysql.cnf
chown root:proxysql /opt/local/etc/proxysql.cnf
mv /opt/local/var/tmp/proxysql.xml /opt/local/lib/svc/manifest/proxysql.xml
svccfg import /opt/local/lib/svc/manifest/proxysql.xml
ln -nfs /var/svc/log/pkgsrc-proxysql:default.log /var/log/proxysql_log

echo "* Make whoami accessible"
ln -nfs /opt/local/heirloom/bin/whoami /opt/local/bin/whoami

# Clean up
echo "* Cleaning up."
pkgin -y rm gcc7 gmake pkg-config autoconf re2c 2>/dev/null || true
rm /root/customize

# Prepare image for provisioning
sm-prepare-image -y
