user   www  www;
worker_processes  auto;

events {
    worker_connections  10240;
}

http {
    include       /opt/local/etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $upstream_response_time';

    access_log  /var/log/nginx/access.log  main;

    server_tokens off;

    proxy_connect_timeout 3600;
    proxy_send_timeout    3600;
    proxy_read_timeout    3600;
    send_timeout          3600;
    client_header_timeout 3600;
    client_body_timeout   3600;
    fastcgi_read_timeout  3600;

    upstream php-handler {
        # server 127.0.0.1:9000;
        server unix:/var/tmp/php.sock;
    }

    server {
        listen 127.0.0.1:80;
        server_name localhost;
        location /nginx_status {
            stub_status on;
            access_log  off;
            allow 127.0.0.1;
            deny all;
        }
       location ~ ^/fpm_(status|ping)$ {
         access_log off;
         allow 127.0.0.1;
         deny all;
         fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
         fastcgi_index index.php;
         include fastcgi_params;
         fastcgi_pass php-handler;
       }
    }

    server {
        listen 80;
        listen [::]:80;
        server_name nc.example.com;

        # Enforce HTTPS
        return 301 https://$server_name$request_uri;
    }

    server {
        # https://www.nginx.com/resources/wiki/start/topics/recipes/piwik/
        listen 443      ssl http2;
        listen [::]:443 ssl http2;
        limit_conn arbeit 10;
        server_name stats.example.com;
        
        # Use Mozilla's guidelines for SSL/TLS settings
        # https://mozilla.github.io/server-side-tls/ssl-config-generator/
        ssl_certificate     /opt/local/etc/httpd/ssl/nextcloud.crt;
        ssl_certificate_key /opt/local/etc/httpd/ssl/nextcloud.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         'EDH+CAMELLIA:EDH+aRSA:EECDH+aRSA+AESGCM:EECDH+aRSA+SHA256:EECDH:+CAMELLIA128:+AES128:+SSLv3:!aNULL:!eNULL:!LOW:!3DES:!MD5:!EXP:!PSK:!DSS:!RC4:!SEED:!IDEA:!ECDSA:kEDH:CAMELLIA128-SHA:AES128-SHA';
        ssl_prefer_server_ciphers on;
        
        # HSTS settings
        # WARNING: Only add the preload option once you read about
        # the consequences in https://hstspreload.org/. This option
        # will add the domain to a hardcoded list that is shipped
        # in all major browsers and getting removed from this list
        # could take several months.
        #add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload;" always;

        # set max upload size
        client_max_body_size 4096M;
        fastcgi_buffers 64 4K;

        # Enable gzip but do not remove ETag headers
        gzip on;
        gzip_vary on;
        gzip_comp_level 4;
        gzip_min_length 256;
        gzip_proxied expired no-cache no-store private no_last_modified no_etag auth;
        gzip_types application/atom+xml application/javascript application/json application/ld+json application/manifest+json application/rss+xml application/vnd.geo+json application/vnd.ms-fontobject application/x-font-ttf application/x-web-app-manifest+json application/xhtml+xml application/xml font/opentype image/bmp image/svg+xml image/x-icon text/cache-manifest text/css text/plain text/vcard text/vnd.rim.location.xloc text/vtt text/x-component text/x-cross-domain-policy;

        # HTTP response headers borrowed from Nextcloud `.htaccess`
        add_header Referrer-Policy                      "no-referrer"   always;
        add_header X-Content-Type-Options               "nosniff"       always;
        add_header X-Download-Options                   "noopen"        always;
        add_header X-Frame-Options                      "SAMEORIGIN"    always;
        add_header X-Permitted-Cross-Domain-Policies    "none"          always;
        add_header X-Robots-Tag                         "none"          always;
        add_header X-XSS-Protection                     "1; mode=block" always;

        # Remove X-Powered-By, which is an information leak
        fastcgi_hide_header X-Powered-By;

        # Parameterization using hostname of access and log filenames.
        access_log  /var/log/nginx/stats_access.log;
        error_log   /var/log/nginx/stats_error.log;

        # Disable all methods besides HEAD, GET and POST.
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 444;
        }

        root  /var/www/htdocs/piwik/current/;
        index  index.php index.html;

        # Support for favicon. Return a 204 (No Content) if the favicon
        # doesn't exist.
        location = /favicon.ico {
            try_files /favicon.ico =204;
        }

        # Try all locations and relay to index.php as a fallback.
        location / {
            try_files $uri /index.php;
        }

        # Relay all index.php requests to fastcgi.
        location ~* ^/(?:index|piwik|matomo)\.php$ {
            fastcgi_pass unix:/tmp/php-cgi/php-cgi.socket;
        }

        # Return a 404 for protected directories
        location ~ /(?:config|tmp|vendor)/ {
            return 404;
        }

        # Any other attempt to access PHP files returns a 404.
        location ~* ^.*\.php$ {
            return 404;
        }

        # Return a 404 for files and directories starting with a period. This includes directories used by version control systems
        location ~ /\. {
            return 404;
        }

        # Return a 404 for package manager config files
        location ~ (?:composer.json|composer.lock|bower.json)$ {
            return 404;
        }

        # Return a 404 for all text files.
        location ~* (?:README|LICENSE|LEGALNOTICE|\.txt|\.md)$ {
            return 404;
        }

        # # The 404 is signaled through a static page.
        # error_page  404  /404.html;

        # ## All server error pages go to 50x.html at the document root.
        # error_page 500 502 503 504  /50x.html;
        # location = /50x.html {
        #       root   /var/www/nginx-default;
        # }
    } # server
    
    include /opt/local/etc/nginx/sites-enabled/*.conf;
}